[
    {
        "id": "c76b3260.35766",
        "type": "mqtt out",
        "z": "34dcdf43.55987",
        "name": "Add accessory",
        "topic": "homebridge/to/add",
        "qos": "",
        "retain": "",
        "broker": "20681137.8bf77e",
        "x": 820,
        "y": 220,
        "wires": []
    },
    {
        "id": "3aab9aac.a2fc86",
        "type": "mqtt out",
        "z": "34dcdf43.55987",
        "name": "Remove Accessory",
        "topic": "homebridge/to/remove",
        "qos": "",
        "retain": "",
        "broker": "20681137.8bf77e",
        "x": 830,
        "y": 280,
        "wires": []
    },
    {
        "id": "408977b2.bbfdd8",
        "type": "debug",
        "z": "34dcdf43.55987",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "x": 810,
        "y": 160,
        "wires": []
    },
    {
        "id": "646cdfd.92ec62",
        "type": "mqtt in",
        "z": "34dcdf43.55987",
        "name": "",
        "topic": "homebridge/from/#",
        "qos": "2",
        "broker": "20681137.8bf77e",
        "x": 130,
        "y": 160,
        "wires": [
            [
                "408977b2.bbfdd8"
            ]
        ]
    },
    {
        "id": "543d48db.f44478",
        "type": "inject",
        "z": "34dcdf43.55987",
        "name": "Delete All",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "x": 100,
        "y": 280,
        "wires": [
            [
                "4a8205b8.9099fc"
            ]
        ]
    },
    {
        "id": "6a449c41.b1eb94",
        "type": "mqtt in",
        "z": "34dcdf43.55987",
        "name": "",
        "topic": "pccwd/keypress",
        "qos": "2",
        "broker": "20681137.8bf77e",
        "x": 120,
        "y": 360,
        "wires": [
            [
                "43861ea.018f6e",
                "de4c77fc.5377a8"
            ]
        ]
    },
    {
        "id": "43861ea.018f6e",
        "type": "json",
        "z": "34dcdf43.55987",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 350,
        "y": 340,
        "wires": [
            [
                "30029a73.c3d586"
            ]
        ]
    },
    {
        "id": "d363c47e.f2e808",
        "type": "file in",
        "z": "34dcdf43.55987",
        "name": "Config",
        "filename": "/home/pi/mordomusdevices.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "x": 230,
        "y": 220,
        "wires": [
            [
                "745246af.e96cf8"
            ]
        ]
    },
    {
        "id": "2005c6e4.e8ce6a",
        "type": "inject",
        "z": "34dcdf43.55987",
        "name": "CREATE",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "x": 100,
        "y": 220,
        "wires": [
            [
                "d363c47e.f2e808"
            ]
        ]
    },
    {
        "id": "745246af.e96cf8",
        "type": "json",
        "z": "34dcdf43.55987",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 350,
        "y": 220,
        "wires": [
            [
                "7d0125f7.2cd01c"
            ]
        ]
    },
    {
        "id": "7d0125f7.2cd01c",
        "type": "split",
        "z": "34dcdf43.55987",
        "name": "For..each",
        "splt": "iterate",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 480,
        "y": 220,
        "wires": [
            [
                "4a6675b2.f03b6c"
            ]
        ]
    },
    {
        "id": "4a8205b8.9099fc",
        "type": "file in",
        "z": "34dcdf43.55987",
        "name": "Config",
        "filename": "/home/pi/mordomusdevices.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "x": 230,
        "y": 280,
        "wires": [
            [
                "66a77900.141c98"
            ]
        ]
    },
    {
        "id": "66a77900.141c98",
        "type": "json",
        "z": "34dcdf43.55987",
        "name": "",
        "pretty": false,
        "x": 350,
        "y": 280,
        "wires": [
            [
                "ac2db8e4.dda548"
            ]
        ]
    },
    {
        "id": "ac2db8e4.dda548",
        "type": "split",
        "z": "34dcdf43.55987",
        "name": "For..each",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 480,
        "y": 280,
        "wires": [
            [
                "d1469b14.9e8938"
            ]
        ]
    },
    {
        "id": "aec274ee.c20ec8",
        "type": "mqtt in",
        "z": "34dcdf43.55987",
        "name": "",
        "topic": "homebridge/from/set",
        "qos": "2",
        "broker": "20681137.8bf77e",
        "x": 130,
        "y": 551,
        "wires": [
            [
                "83f3ca69.b621b8"
            ]
        ]
    },
    {
        "id": "83f3ca69.b621b8",
        "type": "json",
        "z": "34dcdf43.55987",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 350,
        "y": 551,
        "wires": [
            [
                "b5005f7a.275a2"
            ]
        ]
    },
    {
        "id": "c9f718c2.50ca48",
        "type": "mqtt in",
        "z": "34dcdf43.55987",
        "name": "",
        "topic": "homebridge/from/get",
        "qos": "2",
        "broker": "20681137.8bf77e",
        "x": 130,
        "y": 460,
        "wires": [
            [
                "9831f7d4.032e78"
            ]
        ]
    },
    {
        "id": "9831f7d4.032e78",
        "type": "json",
        "z": "34dcdf43.55987",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 350,
        "y": 460,
        "wires": [
            [
                "c705465b.c04ec8"
            ]
        ]
    },
    {
        "id": "a1e60f04.4521f",
        "type": "mqtt out",
        "z": "34dcdf43.55987",
        "name": "",
        "topic": "homebridge/to/set",
        "qos": "",
        "retain": "",
        "broker": "20681137.8bf77e",
        "x": 830,
        "y": 400,
        "wires": []
    },
    {
        "id": "c543c43.0ed5138",
        "type": "function",
        "z": "34dcdf43.55987",
        "name": "SetStatus",
        "func": "if(msg.payload.Count>1)\n    return;\n    \nvar Lightbulbs=flow.get('Lightbulbs');\n\nif(Lightbulbs===null)\n    return;\n\nvar id=0;\nswitch (msg.payload.Id)\n\t{\n\t\tcase 75:\n\t\t    id=\"174\";\n\t\t\tbreak;\n\t\tcase 76:\n\t\t    id=\"170\";\n\t\t\tbreak;\n\t\tcase 77:\n\t\t    id=\"169\";\n\t\t\tbreak;\n\t\tcase 78:\n\t\t    id=\"171\";\n\t\t\tbreak;\n\t\tcase 81: \n\t\t    id=\"168\";\n\t\t\tbreak;\n\t\tcase 82: \n\t\t    id=\"172\";\n\t\t\tbreak;\n\t\tcase 83: \n\t\t    id=\"173\";\n\t\t\tbreak;\n\t\tcase 84: \n\t\tcase 80: \n\t\tcase 79: \n\t\t    id=\"167\";\n\t\t\tbreak;\t   \n\t}\n\nif(Lightbulbs[id]===null)\n    return;\n    \nLightbulbs[id].status=!Lightbulbs[id].status||false;\nflow.set('Lightbulbs',Lightbulbs);\n\nreturn { payload: {\n    name:Lightbulbs[id].name,\n    service_name:Lightbulbs[id].service_name,\n    characteristic:\"On\",\n    value:Lightbulbs[id].status\n}};",
        "outputs": 1,
        "noerr": 0,
        "x": 520,
        "y": 400,
        "wires": [
            [
                "a1e60f04.4521f"
            ]
        ]
    },
    {
        "id": "de4c77fc.5377a8",
        "type": "json",
        "z": "34dcdf43.55987",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 350,
        "y": 400,
        "wires": [
            [
                "c543c43.0ed5138"
            ]
        ]
    },
    {
        "id": "b5005f7a.275a2",
        "type": "function",
        "z": "34dcdf43.55987",
        "name": "set status",
        "func": "var Lightbulbs=flow.get('Lightbulbs');\nLightbulbs[msg.payload.name].status=msg.payload.value;\nflow.set('Lightbulbs',Lightbulbs);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 520,
        "y": 551,
        "wires": [
            [
                "1f882ce3.ae5ba3"
            ]
        ]
    },
    {
        "id": "c705465b.c04ec8",
        "type": "function",
        "z": "34dcdf43.55987",
        "name": "GetStatus",
        "func": "var Lightbulbs=flow.get('Lightbulbs');\nmsg.payload.value=Lightbulbs[parseInt(msg.payload.name)].status||false;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 520,
        "y": 460,
        "wires": [
            [
                "a1e60f04.4521f"
            ]
        ]
    },
    {
        "id": "4a6675b2.f03b6c",
        "type": "function",
        "z": "34dcdf43.55987",
        "name": "StoreFlowData",
        "func": "switch(msg.payload.service){\n    case \"Lightbulb\":\n        Lightbulbs=flow.get('Lightbulbs')||[];\n        Lightbulbs[msg.payload.name]=msg.payload;\n        flow.set('Lightbulbs',Lightbulbs);\n    break;\n    case \"StatelessProgrammableSwitch\":\n        StatelessProgrammableSwitchs=flow.get('StatelessProgrammableSwitchs')||[];\n        StatelessProgrammableSwitchs[msg.payload.id]=msg.payload;\n        flow.set('StatelessProgrammableSwitchs',StatelessProgrammableSwitchs);\n    break;\n}\n\nreturn { payload: {\n   name: msg.payload.name,\n   service_name: msg.payload.service_name,\n   service: msg.payload.service}\n};\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 640,
        "y": 220,
        "wires": [
            [
                "c76b3260.35766"
            ]
        ]
    },
    {
        "id": "d1469b14.9e8938",
        "type": "function",
        "z": "34dcdf43.55987",
        "name": "ClearFlowData",
        "func": "switch(msg.payload.service){\n    case \"Lightbulb\":\n        Lightbulbs=flow.get('Lightbulbs')||[];\n        Lightbulbs=Lightbulbs.splice(msg.payload.name, 1);\n        flow.set('Lightbulbs',Lightbulbs);\n    break;\n    case \"StatelessProgrammableSwitch\":\n        StatelessProgrammableSwitchs=flow.get('StatelessProgrammableSwitchs')||[];\n        StatelessProgrammableSwitchs= StatelessProgrammableSwitchs.splice(msg.payload.id,1);\n        flow.set('StatelessProgrammableSwitchs',StatelessProgrammableSwitchs);\n    break;\n}\n\nreturn  { payload: {name:msg.payload.name}};\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 640,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "30029a73.c3d586",
        "type": "function",
        "z": "34dcdf43.55987",
        "name": "Click",
        "func": "var sswitch=flow.get('StatelessProgrammableSwitchs')[msg.payload.Id];\n\nreturn { payload: {\n   name: sswitch.name,\n   service_name: sswitch.service_name,\n   characteristic: \"ProgrammableSwitchEvent\",\n   value: msg.payload.Count-1\n}\n};\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 510,
        "y": 340,
        "wires": [
            [
                "a1e60f04.4521f"
            ]
        ]
    },
    {
        "id": "1f882ce3.ae5ba3",
        "type": "mqtt out",
        "z": "34dcdf43.55987",
        "name": "",
        "topic": "pccwd/setlightbulb",
        "qos": "",
        "retain": "",
        "broker": "20681137.8bf77e",
        "x": 830,
        "y": 550,
        "wires": []
    },
    {
        "id": "20681137.8bf77e",
        "type": "mqtt-broker",
        "z": "",
        "broker": "localhost",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "compatmode": true,
        "keepalive": "60",
        "cleansession": true,
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": ""
    }
]